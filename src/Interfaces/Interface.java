/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import java.awt.BasicStroke;
import java.awt.Color;
import Classes.Company;
import Classes.ProjectManager;
import Classes.Supervisor;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import java.io.PrintWriter;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.filechooser.FileNameExtensionFilter;

 
import org.jfree.chart.JFreeChart;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;


/**
 *
 * @author kevin
 */
public class Interface extends javax.swing.JFrame {

            Company Apple = new Company("Apple", 5);
            Company MSI = new Company("MSI", 5);
            boolean iniciado=false;
            private String path;
            int max_apple = 13; //Carnet de Kevin termina en 1
            int max_msi = 15; //Carnet de Andrea termina en 3
    

    /**
     * Creates new form Ventana
     */
    public Interface() {
        initComponents();

    }
    
    public static JLabel getApple_Deadline_Counter() {
        return Apple_Deadline_Counter;
    }
    
    
     public static JLabel getMSI_Deadline_Counter() {
        return MSI_Deadline_Counter;
    }
    

    public String getPath() {
        return path;
    }

    public void setPath(String path) {
        this.path = path;
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        saveButtonActionPerformed = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        Cont_Deadline = new javax.swing.JSpinner();
        Cont_Day_Duration = new javax.swing.JSpinner();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        Const_ProduPlaca_Apple = new javax.swing.JSpinner();
        Const_ProduCPU_Apple = new javax.swing.JSpinner();
        Const_ProduMemoRAM_Apple = new javax.swing.JSpinner();
        Const_ProduFuenteAlime_Apple = new javax.swing.JSpinner();
        Const_ProduTarjegGraf_Apple = new javax.swing.JSpinner();
        Const_Ensambladores_Apple = new javax.swing.JSpinner();
        Apple_Director_State = new javax.swing.JLabel();
        Apple_Pm_State = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Apple_Fail_Counter = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Apple_Discount_Counter = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        Apple_Deadline_Counter = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        Apple_Gain_Counter = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        Apple_Loss_Counter = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        Apple_Utility_Counter = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        Warehouse_ProduPlacabase_Apple = new javax.swing.JLabel();
        Warehouse_ProduCPU_Apple = new javax.swing.JLabel();
        Warehouse_ProdumemoRAM_Apple = new javax.swing.JLabel();
        Warehouse_FuenteAlimen_Apple = new javax.swing.JLabel();
        Wrehouse_TarjeGrafi_Apple = new javax.swing.JLabel();
        Warehouse_Apple_PC_Regular = new javax.swing.JLabel();
        Warehouse_Apple_PC_Special = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        Const_ProduPlaca_MSI = new javax.swing.JSpinner();
        Const_ProduCPU_MSI = new javax.swing.JSpinner();
        Const_ProduMemoRAM_MSI = new javax.swing.JSpinner();
        Const_ProduFuenteAlime_MSI = new javax.swing.JSpinner();
        Const_ProduTarjegGraf_MSI = new javax.swing.JSpinner();
        Const_Ensambladores_MSI = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        MSI_Deadline_Counter = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        MSI_Gain_Counter = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        MSI_Loss_Counter = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        MSI_Utility_Counter = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        MSI_Director_State = new javax.swing.JLabel();
        MSI_pm_state = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        MSI_Fail_Counter = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        MSI_Discount_Counter = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        Warehouse_ProduPlacabase_MSI = new javax.swing.JLabel();
        Warehouse_ProduCPU_MSI = new javax.swing.JLabel();
        Warehouse_ProdumemoRAM_MSI = new javax.swing.JLabel();
        Warehouse_FuenteAlimen_MSI = new javax.swing.JLabel();
        Wrehouse_TarjeGrafi_MSI = new javax.swing.JLabel();
        Warehouse_MSI_PC_Regular = new javax.swing.JLabel();
        Warehouse_MSI_PC_Special = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        panelChart = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBackground(new java.awt.Color(153, 204, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        saveButtonActionPerformed.setBackground(new java.awt.Color(204, 204, 204));
        saveButtonActionPerformed.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        saveButtonActionPerformed.setForeground(new java.awt.Color(51, 102, 255));
        saveButtonActionPerformed.setText("Guardar");
        saveButtonActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformedActionPerformed(evt);
            }
        });
        jPanel2.add(saveButtonActionPerformed, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 410, 212, -1));

        jButton3.setBackground(new java.awt.Color(204, 204, 204));
        jButton3.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jButton3.setForeground(new java.awt.Color(51, 102, 255));
        jButton3.setText("INICIAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 370, 82, -1));

        Cont_Deadline.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Cont_DeadlineStateChanged(evt);
            }
        });
        jPanel2.add(Cont_Deadline, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 300, -1, -1));

        Cont_Day_Duration.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Cont_Day_DurationStateChanged(evt);
            }
        });
        jPanel2.add(Cont_Day_Duration, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 300, -1, -1));

        jLabel34.setFont(new java.awt.Font("AppleGothic", 0, 18)); // NOI18N
        jLabel34.setText("Deadline");
        jPanel2.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 270, -1, -1));

        jLabel35.setFont(new java.awt.Font("AppleGothic", 3, 18)); // NOI18N
        jLabel35.setText("Duracion del día");
        jPanel2.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 260, -1, -1));

        jLabel36.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jLabel36.setText("milisegundos");
        jPanel2.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 310, -1, -1));

        jLabel37.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jLabel37.setText("dias");
        jPanel2.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 310, -1, -1));

        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/Deco.png"))); // NOI18N
        jLabel41.setText("jLabel41");
        jPanel2.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 0, 450, 230));

        jLabel42.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/img2.png"))); // NOI18N
        jLabel42.setText("jLabel42");
        jPanel2.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, -10, 550, 290));

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/Sin título (968 x 549 px) (978 x 549 px) (978 x 549 px) (300 x 200 px) (978 x 549 px)-2.jpg"))); // NOI18N
        jLabel40.setText("jLabel40");
        jPanel2.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(-440, 10, 770, 510));

        jLabel43.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/blur.jpg"))); // NOI18N
        jLabel43.setText("jLabel43");
        jPanel2.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 80, 630, 470));

        jTabbedPane1.addTab("Inicio", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Const_ProduPlaca_Apple.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Const_ProduPlaca_AppleStateChanged(evt);
            }
        });
        jPanel3.add(Const_ProduPlaca_Apple, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 190, -1, -1));

        Const_ProduCPU_Apple.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Const_ProduCPU_AppleStateChanged(evt);
            }
        });
        jPanel3.add(Const_ProduCPU_Apple, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 230, -1, -1));

        Const_ProduMemoRAM_Apple.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Const_ProduMemoRAM_AppleStateChanged(evt);
            }
        });
        jPanel3.add(Const_ProduMemoRAM_Apple, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 270, -1, -1));

        Const_ProduFuenteAlime_Apple.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Const_ProduFuenteAlime_AppleStateChanged(evt);
            }
        });
        jPanel3.add(Const_ProduFuenteAlime_Apple, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 320, -1, -1));

        Const_ProduTarjegGraf_Apple.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Const_ProduTarjegGraf_AppleStateChanged(evt);
            }
        });
        jPanel3.add(Const_ProduTarjegGraf_Apple, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 360, -1, -1));

        Const_Ensambladores_Apple.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Const_Ensambladores_AppleStateChanged(evt);
            }
        });
        jPanel3.add(Const_Ensambladores_Apple, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 410, -1, -1));

        Apple_Director_State.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Apple_Director_State.setText("Trabajando");
        jPanel3.add(Apple_Director_State, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 250, 156, -1));

        Apple_Pm_State.setText("Trabajando");
        jPanel3.add(Apple_Pm_State, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, -1, -1));

        jLabel5.setFont(new java.awt.Font("AppleGothic", 3, 18)); // NOI18N
        jLabel5.setText("Faltas (PM)");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 340, -1, -1));

        Apple_Fail_Counter.setText("0");
        jPanel3.add(Apple_Fail_Counter, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 340, -1, -1));

        jLabel7.setFont(new java.awt.Font("AppleGothic", 3, 18)); // NOI18N
        jLabel7.setText("Sueldo descontado");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 380, 160, 25));

        Apple_Discount_Counter.setText("0");
        jPanel3.add(Apple_Discount_Counter, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 380, -1, -1));

        jLabel9.setFont(new java.awt.Font("AppleGothic", 3, 18)); // NOI18N
        jLabel9.setText("Project Manager");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 140, -1));

        jLabel10.setFont(new java.awt.Font("AppleGothic", 3, 18)); // NOI18N
        jLabel10.setText("Director");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, 70, -1));

        jLabel11.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jLabel11.setText("Deadline");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, -1, -1));

        Apple_Deadline_Counter.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        Apple_Deadline_Counter.setText("0");
        jPanel3.add(Apple_Deadline_Counter, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, 25, -1));

        jLabel13.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jLabel13.setText("Ganancias");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, -1, -1));

        Apple_Gain_Counter.setText("0");
        jPanel3.add(Apple_Gain_Counter, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 80, 112, 18));

        jLabel15.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jLabel15.setText("Gastos");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 50, -1, -1));

        Apple_Loss_Counter.setText("0");
        jPanel3.add(Apple_Loss_Counter, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 80, 110, -1));

        jLabel17.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jLabel17.setText("Utilidad");
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 50, -1, -1));

        Apple_Utility_Counter.setText("0");
        jPanel3.add(Apple_Utility_Counter, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 80, -1, -1));

        jLabel4.setText("Productores de placa base");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 190, -1, -1));

        jLabel6.setText("Productores de CPUs");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 230, -1, -1));

        jLabel8.setText("Productores de Memoria RAM");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 270, -1, -1));

        jLabel14.setText("Productores de Fuente de alimentación");
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 320, -1, -1));

        jLabel16.setText("Productores de tarjetas gráficas");
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 360, -1, -1));

        jLabel18.setText("Ensambladores");
        jPanel3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 400, -1, -1));

        Warehouse_ProduPlacabase_Apple.setText("0");
        jPanel3.add(Warehouse_ProduPlacabase_Apple, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 190, -1, -1));

        Warehouse_ProduCPU_Apple.setText("0");
        jPanel3.add(Warehouse_ProduCPU_Apple, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 230, -1, -1));

        Warehouse_ProdumemoRAM_Apple.setText("0");
        jPanel3.add(Warehouse_ProdumemoRAM_Apple, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 270, -1, -1));

        Warehouse_FuenteAlimen_Apple.setText("0");
        jPanel3.add(Warehouse_FuenteAlimen_Apple, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 320, -1, -1));

        Wrehouse_TarjeGrafi_Apple.setText("0");
        jPanel3.add(Wrehouse_TarjeGrafi_Apple, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 370, -1, -1));

        Warehouse_Apple_PC_Regular.setText("0");
        jPanel3.add(Warehouse_Apple_PC_Regular, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 490, -1, -1));

        Warehouse_Apple_PC_Special.setText("0");
        jPanel3.add(Warehouse_Apple_PC_Special, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 490, 14, -1));

        jLabel27.setFont(new java.awt.Font("AppleGothic", 3, 14)); // NOI18N
        jLabel27.setText("PC con Grafica");
        jPanel3.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 460, -1, -1));

        jLabel28.setFont(new java.awt.Font("AppleGothic", 3, 14)); // NOI18N
        jLabel28.setText("PC Normal");
        jPanel3.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 460, 80, -1));

        jLabel60.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/image-removebg-preview.png"))); // NOI18N
        jLabel60.setText("jLabel59");
        jPanel3.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(-270, 0, 460, 220));

        jLabel44.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/img3.jpg"))); // NOI18N
        jLabel44.setText("jLabel44");
        jPanel3.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(-280, 90, 740, 460));

        jLabel53.setText("/10");
        jPanel3.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 370, -1, -1));

        jLabel47.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/apleeeeee.jpg"))); // NOI18N
        jLabel47.setText("jLabel47");
        jPanel3.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 550, 260));

        jLabel51.setText("/55");
        jPanel3.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 270, -1, -1));

        jLabel59.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/image-removebg-preview.png"))); // NOI18N
        jLabel59.setText("jLabel59");
        jPanel3.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 330, 450, 220));

        jLabel52.setText("/35");
        jPanel3.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 320, -1, -1));

        jLabel48.setText("/25");
        jPanel3.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 190, -1, -1));

        jLabel49.setText("/20");
        jPanel3.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 230, -1, -1));

        jLabel45.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/img3.jpg"))); // NOI18N
        jLabel45.setText("jLabel45");
        jPanel3.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, 760, 420));

        jLabel50.setText("/20");
        jPanel3.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 230, -1, -1));

        jTabbedPane1.addTab("Apple", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Const_ProduPlaca_MSI.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Const_ProduPlaca_MSIStateChanged(evt);
            }
        });
        jPanel4.add(Const_ProduPlaca_MSI, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 210, -1, -1));

        Const_ProduCPU_MSI.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Const_ProduCPU_MSIStateChanged(evt);
            }
        });
        jPanel4.add(Const_ProduCPU_MSI, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 260, -1, -1));

        Const_ProduMemoRAM_MSI.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Const_ProduMemoRAM_MSIStateChanged(evt);
            }
        });
        jPanel4.add(Const_ProduMemoRAM_MSI, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 300, -1, -1));

        Const_ProduFuenteAlime_MSI.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Const_ProduFuenteAlime_MSIStateChanged(evt);
            }
        });
        jPanel4.add(Const_ProduFuenteAlime_MSI, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 340, -1, -1));

        Const_ProduTarjegGraf_MSI.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Const_ProduTarjegGraf_MSIStateChanged(evt);
            }
        });
        jPanel4.add(Const_ProduTarjegGraf_MSI, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 380, -1, -1));

        Const_Ensambladores_MSI.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Const_Ensambladores_MSIStateChanged(evt);
            }
        });
        jPanel4.add(Const_Ensambladores_MSI, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 420, -1, -1));

        jLabel12.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jLabel12.setText("Deadline");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, -1, -1));

        MSI_Deadline_Counter.setText("0");
        jPanel4.add(MSI_Deadline_Counter, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, -1, -1));

        jLabel20.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jLabel20.setText("Ganancias");
        jPanel4.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, -1, -1));

        MSI_Gain_Counter.setText("0");
        jPanel4.add(MSI_Gain_Counter, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, -1, -1));

        jLabel22.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jLabel22.setText("Gastos");
        jPanel4.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 50, -1, -1));

        MSI_Loss_Counter.setText("0");
        jPanel4.add(MSI_Loss_Counter, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 80, 67, -1));

        jLabel24.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jLabel24.setText("Utilidad");
        jPanel4.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 50, -1, -1));

        MSI_Utility_Counter.setText("0");
        jPanel4.add(MSI_Utility_Counter, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 80, -1, -1));

        jLabel19.setText("Director");
        jPanel4.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, -1, -1));

        jLabel26.setText("Project Manager");
        jPanel4.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 258, -1, -1));

        MSI_Director_State.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        MSI_Director_State.setText("Trabajando");
        jPanel4.add(MSI_Director_State, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 201, 157, -1));

        MSI_pm_state.setText("Trabajando");
        jPanel4.add(MSI_pm_state, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 258, -1, -1));

        jLabel29.setText("Faltas (PM)");
        jPanel4.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 320, -1, -1));

        MSI_Fail_Counter.setText("0");
        jPanel4.add(MSI_Fail_Counter, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 316, -1, -1));

        jLabel31.setText("Sueldo descontado");
        jPanel4.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 371, -1, -1));

        MSI_Discount_Counter.setText("0");
        jPanel4.add(MSI_Discount_Counter, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 371, -1, -1));

        jLabel21.setText("Productores de placa base");
        jPanel4.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 210, -1, -1));

        jLabel23.setText("Productores de CPUs");
        jPanel4.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 260, -1, -1));

        jLabel25.setText("Productores de Memoria RAM");
        jPanel4.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 300, -1, -1));

        jLabel30.setText("Productores de Fuente de alimentación");
        jPanel4.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 340, -1, -1));

        jLabel32.setText("Productores de tarjetas gráficas");
        jPanel4.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 380, -1, -1));

        jLabel33.setText("Ensambladores");
        jPanel4.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 420, -1, -1));

        Warehouse_ProduPlacabase_MSI.setText("0");
        jPanel4.add(Warehouse_ProduPlacabase_MSI, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 210, -1, -1));

        Warehouse_ProduCPU_MSI.setText("0");
        jPanel4.add(Warehouse_ProduCPU_MSI, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 260, -1, -1));

        Warehouse_ProdumemoRAM_MSI.setText("0");
        jPanel4.add(Warehouse_ProdumemoRAM_MSI, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 300, -1, -1));

        Warehouse_FuenteAlimen_MSI.setText("0");
        jPanel4.add(Warehouse_FuenteAlimen_MSI, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 340, -1, -1));

        Wrehouse_TarjeGrafi_MSI.setText("0");
        jPanel4.add(Wrehouse_TarjeGrafi_MSI, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 380, -1, -1));

        Warehouse_MSI_PC_Regular.setText("0");
        jPanel4.add(Warehouse_MSI_PC_Regular, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 500, -1, -1));

        Warehouse_MSI_PC_Special.setText("0");
        jPanel4.add(Warehouse_MSI_PC_Special, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 500, 23, 25));

        jLabel38.setText("PC Normal");
        jPanel4.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 470, -1, -1));

        jLabel46.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/fuego.png"))); // NOI18N
        jLabel46.setText("jLabel46");
        jPanel4.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(-240, 420, 420, 160));

        jLabel58.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/yuuuu.png"))); // NOI18N
        jPanel4.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 0, 420, 200));

        jLabel39.setText("PC con Grafica");
        jPanel4.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 470, -1, -1));

        jLabel56.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/blurrrmsi.jpg"))); // NOI18N
        jLabel56.setText("jLabel56");
        jPanel4.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(-230, 100, 690, 440));

        jLabel54.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/msiiii.jpg"))); // NOI18N
        jLabel54.setText("jLabel54");
        jPanel4.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 570, 230));

        jLabel55.setText("jLabel55");
        jPanel4.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, -1, -1));

        jLabel57.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/blurrrmsi.jpg"))); // NOI18N
        jLabel57.setText("jLabel57");
        jPanel4.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, 730, 450));

        jTabbedPane1.addTab("MSI", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("AppleGothic", 1, 36)); // NOI18N
        jLabel1.setText("Gráfico");
        jPanel5.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, -1, -1));

        jLabel2.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jLabel2.setText("MSI");
        jPanel5.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(859, 40, -1, -1));

        jLabel3.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jLabel3.setText("Apple");
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(859, 69, -1, -1));

        jPanel6.setBackground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(909, 35, -1, -1));

        jPanel7.setBackground(new java.awt.Color(115, 185, 123));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel5.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(909, 69, -1, -1));

        panelChart.setLayout(new java.awt.BorderLayout());
        jPanel5.add(panelChart, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 113, 920, 420));
        panelChart.setBackground(new java.awt.Color(204, 204, 204));

        panelChart.setForeground(new java.awt.Color(255, 255, 255));

        // Code of sub-components and layout - not shown here

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 40, -1, -1));

        jPanel9.setBackground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 70, -1, -1));

        jPanel10.setBackground(new java.awt.Color(102, 255, 102));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 70, 20, 20));

        jTabbedPane1.addTab("Gráfico", jPanel5);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformedActionPerformed
        // TODO add your handling code here:
        
          if(iniciado == true){
            //Apple
            int placaApple=(int) this.Const_ProduPlaca_Apple.getValue();
            int cpuApple=(int) this.Const_ProduCPU_Apple.getValue();
            int ramApple=(int) this.Const_ProduMemoRAM_Apple.getValue();
            int fuenteAlimeApple=(int) this.Const_ProduFuenteAlime_Apple.getValue();
            int tarjeGrafApple=(int) this.Const_ProduTarjegGraf_Apple.getValue();
            int EnsambladoresApple=(int) this.Const_Ensambladores_Apple.getValue();
            //MSI
             int placaMSI=(int) this.Const_ProduPlaca_MSI.getValue();
            int cpuMSI=(int) this.Const_ProduCPU_MSI.getValue();
            int ramMSI=(int) this.Const_ProduMemoRAM_MSI.getValue();
            int fuenteAlimeMSI=(int) this.Const_ProduFuenteAlime_MSI.getValue();
            int tarjeGrafMSI=(int) this.Const_ProduTarjegGraf_MSI.getValue();
            int EnsambladoresMSI=(int) this.Const_Ensambladores_MSI.getValue();
            
            int deadline=(int) this.Cont_Deadline.getValue();
            int DuracionD=(int) this.Cont_Day_Duration.getValue();
          
            
             String TodoTXT="Duracion\n"+DuracionD+";\nDeadline\n"+deadline+";\nApple-\nTrabajadores:\nProductoresPlaca,"+placaApple+
                    "\ncpu,"+cpuApple+"\nram,"+ramApple+"\nFuenteAlimentacion,"+fuenteAlimeApple+"\nTarjetagrafica,"+tarjeGrafApple+"\nensambladores,"+EnsambladoresApple+";\n"
                    + "MSI-\nTrabajadores:\nProductoresPlaca,"+placaMSI+
                    "\ncpu,"+cpuMSI+"\nram,"+ramMSI+"\nFuenteAlimentacion,"+fuenteAlimeMSI+"\nTarjetagrafica,"+tarjeGrafMSI+"\nensambladores,"+EnsambladoresMSI;
            
//            System.out.println(TodoTXT);
            
            try {
            if(getPath()!=null) {
            PrintWriter pw=new PrintWriter(getPath());
            pw.print(TodoTXT);
            pw.close();
            JOptionPane.showMessageDialog(null, "Guardado exitoso");
            System.exit(0);
            }
            else{JOptionPane.showMessageDialog(null, "Error!! Primero debe cargar un archivo txt");}
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error!!!!!");
            System.exit(0);
        } 
        
        }else{
            JOptionPane.showMessageDialog(null,"La simulación no ha empezado todavía, no se puede guardar");
        }
                                              
        
    }//GEN-LAST:event_saveButtonActionPerformedActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
                // TODO add your handling code here:
        
        //    //se lee el txt
    if (iniciado==false){
        iniciado=true;
    JFileChooser file = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter(".TXT","txt");
    file.setFileSelectionMode(JFileChooser.FILES_ONLY);
    file.setFileFilter(filter);
    int selection=file.showOpenDialog(this);
    
    if(selection==JFileChooser.APPROVE_OPTION) {
        File archive=file.getSelectedFile(); 
        String path=archive.getAbsolutePath();
        setPath(path);
    
        if(!path.contains("txt")) {
        JOptionPane.showMessageDialog(null, "Por favor elija un archivo del tipo txt");
        }
        else {
        try{
            File archivo = new File (path);
            FileReader fr = new FileReader(archivo); 
            BufferedReader br = new BufferedReader(fr); 
                 
            String cadena;
            String complete=""; 
      
            while ((cadena=br.readLine())!=null) { //lee hasta llegar a null que significa que se acabo el archivo

                if(!cadena.isEmpty()&& !cadena.isBlank()) { //revisa que la linea no sea vacia/que el tamaño de la cadena sea 0
                    complete+=cadena+"\n";
                }
            }
                
            fr.close();
            br.close();
            complete=complete.trim(); //quita linea en blanco al final
            //el !"".equals es para verificar que el string no sea solo un espacio en blanco
            if(!"".equals(complete)) {
                String[] info;
                String [] todo=complete.split(";");
                String [] Dias=todo[0].split("\n");
                int duracionDias=Integer.parseInt(Dias[1]);
                if(duracionDias<=0) {
                    throw new Exception("La duracion del dia no puede ser 0");
                }
                this.Cont_Day_Duration.setValue(duracionDias);
                //System.out.println(duracionDias); //todo bien aqui
                String[] Diasdead=todo[1].split("\n");
                //System.out.println(Diasdead[1]);
                int Deadline=Integer.parseInt(Diasdead[2]);
                if(Deadline<=0) {
                    throw new Exception("El tiempo de entrega no puede ser 0");
                }
                this.Cont_Deadline.setValue(Deadline);
                getApple_Deadline_Counter().setText(Integer.toString(Deadline));
                getMSI_Deadline_Counter().setText(Integer.toString(Deadline));
                
                //ya tengo la duracion del dia y la deadline se crean/agregan las cosas
                MSI.setDayDuration(duracionDias);
                Apple.setDayDuration(duracionDias);
                MSI.setDeliveryDay(Deadline);
                Apple.setDeliveryDay(Deadline);
                
                MSI.getWarehouse().setDeadlineCounter(Deadline);
                MSI.getWarehouse().setDeadline(Deadline);
                
                Apple.getWarehouse().setDeadlineCounter(Deadline);
                Apple.getWarehouse().setDeadline(Deadline);
                
                ProjectManager MSIpm=new ProjectManager(40,duracionDias,Global.getMutexMSI(),MSI.getWarehouse());
                Supervisor MSISuper = new Supervisor(60,Global.getMutexMSI(),duracionDias,MSI.getWarehouse(), MSIpm);
                ProjectManager Applepm=new ProjectManager(40,duracionDias,Global. getMutexApple(),Apple.getWarehouse());
                Supervisor AppleSuper = new Supervisor(60,Global.getMutexApple(),duracionDias,Apple.getWarehouse(),Applepm) ;
                
               //todo2 tiene cosas de cartoon
                todo[2]=todo[2].trim();
                String [] infoestu1=todo[2].split("-");
                //todo3 tiene cosas de nick
                todo[3]=todo[3].trim();
                String [] infoestu2=todo[3].split("-");
                
                if (infoestu1[0].compareTo("Apple")==0) { //el if es porsia 
//                     System.out.println("jajajaj "+infoestu1[0]);
//                     System.out.println(infoestu1[1]);
                     infoestu1[1]=infoestu1[1].trim();
                     String [] divTra=infoestu1[1].split(":");
                     divTra[1]=divTra[1].trim();
                     String [] trabajadores=divTra[1].split("\n");
                     
                     for (int i = 0; i < trabajadores.length; i++) {
                         //System.out.println(i+" "+trabajadores[i]);
                         String [] cantidad=trabajadores[i].split(",");
                         //cantidad[0] debe tener el nombre del trabajador y el [1] la cantidad de ese tipo
                         //cuando se vaya a crear el dev le paso i que seria el tipo y cantidad[1] que seria la cantidad
                         //System.out.println(cantidad[1]);
                         if(Integer.parseInt(cantidad[1])>0) {
                            Apple.AddWorker(i,Integer.parseInt(cantidad[1]));
                         }else {
                         throw new Exception("La cantidad de trabajadores no puede ser 0");
                         }
                         
                     }
                    if(Apple.getListMotherboard().getSize()+Apple.getListCPU().getSize()+Apple.getListRAM().getSize()+Apple.getListPowerSupply().getSize()+Apple.getListGraphic().getSize()+Apple.getListAssembler().getSize()>13){
                        throw new Exception("La cantidad de trabajadores no puede ser 0");
                    }
                    Applepm.start();
                    AppleSuper.start();
                    System.out.println("Listo apple");
                    this.Const_ProduPlaca_Apple.setValue(Apple.getListMotherboard().getSize());
                    this.Const_ProduCPU_Apple.setValue(Apple.getListCPU().getSize());
                    this.Const_ProduMemoRAM_Apple.setValue(Apple.getListRAM().getSize());
                    this.Const_ProduFuenteAlime_Apple.setValue(Apple.getListPowerSupply().getSize());
                    this.Const_ProduTarjegGraf_Apple.setValue(Apple.getListGraphic().getSize());
                    this.Const_Ensambladores_Apple.setValue(Apple.getListAssembler().getSize());
                 
                 }
                 else if (infoestu1[0].compareTo("MSI")==0) {
                     infoestu1[1]=infoestu1[1].trim();
                     String [] divTra=infoestu1[1].split(":");
                     divTra[1]=divTra[1].trim();
                     String [] trabajadores=divTra[1].split("\n");
                     
                     for (int i = 0; i < trabajadores.length; i++) {
                         //System.out.println(i+" "+trabajadores[i]);
                         String [] cantidad=trabajadores[i].split(",");
                         //cantidad[0] debe tener el nombre del trabajador y el [1] la cantidad de ese tipo
                         //cuando se vaya a crear el dev le paso i que seria el tipo y cantidad[1] que seria la cantidad
                         //System.out.println(cantidad[1]);
                         if(Integer.parseInt(cantidad[1])>0) {
                            MSI.AddWorker(i,Integer.parseInt(cantidad[1]));
                         } else {
                         throw new Exception("La cantidad de trabajadores no puede ser 0");
                         }
                         
                    }
                    MSIpm.start();
                    MSISuper.start(); 
                    this.Const_ProduPlaca_MSI.setValue(MSI.getListMotherboard().getSize());
                    this.Const_ProduCPU_MSI.setValue(MSI.getListCPU().getSize());
                    this.Const_ProduMemoRAM_MSI.setValue(MSI.getListRAM().getSize());
                    this.Const_ProduFuenteAlime_MSI.setValue(MSI.getListPowerSupply().getSize());
                    this.Const_ProduTarjegGraf_MSI.setValue(MSI.getListGraphic().getSize());
                    this.Const_Ensambladores_MSI.setValue(MSI.getListAssembler().getSize());
                    
                 }
                 
                 if (infoestu2[0].compareTo("Apple")==0) {
//                     System.out.println("jejejeje "+infoestu2[0]);
//                     System.out.println(infoestu2[1]);
                     infoestu1[1]=infoestu1[1].trim();
                     String [] divTra=infoestu1[1].split(":");
                     divTra[1]=divTra[1].trim();
                     String [] trabajadores=divTra[1].split("\n");
                     
                     for (int i = 0; i < trabajadores.length; i++) {
                         //System.out.println(i+" "+trabajadores[i]);
                         String [] cantidad=trabajadores[i].split(",");
                         //cantidad[0] debe tener el nombre del trabajador y el [1] la cantidad de ese tipo
                         //cuando se vaya a crear el dev le paso i que seria el tipo y cantidad[1] que seria la cantidad
                         //System.out.println(cantidad[1]);
                         if(Integer.parseInt(cantidad[1])>0) { 
                         Apple.AddWorker(i, Integer.parseInt(cantidad[1]));
                        }else {
                         throw new Exception("La cantidad de trabajadores no puede ser 0");
                         }
                         
                     }
                    Applepm.start();
                    AppleSuper.start(); 
                    this.Const_ProduPlaca_Apple.setValue(Apple.getListMotherboard().getSize());
                    this.Const_ProduCPU_Apple.setValue(Apple.getListCPU().getSize());
                    this.Const_ProduMemoRAM_Apple.setValue(Apple.getListRAM().getSize());
                    this.Const_ProduFuenteAlime_Apple.setValue(Apple.getListPowerSupply().getSize());
                    this.Const_ProduTarjegGraf_Apple.setValue(Apple.getListGraphic().getSize());
                    this.Const_Ensambladores_Apple.setValue(Apple.getListAssembler().getSize());
                 }
                 else if (infoestu2[0].compareTo("MSI")==0) {
                     String [] divTra=infoestu2[1].split(":");
                     divTra[1]=divTra[1].trim();
                     String [] trabajadores=divTra[1].split("\n");
                     System.out.println(infoestu2[0]);
                     for (int i = 0; i < trabajadores.length; i++) {
                         //System.out.println(i+" "+trabajadores[i]);
                         String [] cantidad=trabajadores[i].split(",");
                         //cantidad[0] debe tener el nombre del trabajador y el [1] la cantidad de ese tipo
                         //cuando se vaya a crear el dev le paso i que seria el tipo y cantidad[1] que seria la cantidad
                         //System.out.println(cantidad[1]);
                         if(Integer.parseInt(cantidad[1])>0) {
                            MSI.AddWorker(i, Integer.parseInt(cantidad[1]));
                         }else {
                         throw new Exception("La cantidad de trabajadores no puede ser 0");
                         }
                         
                     }
                    if(MSI.getListMotherboard().getSize()+MSI.getListCPU().getSize()+MSI.getListRAM().getSize()+MSI.getListPowerSupply().getSize()+MSI.getListGraphic().getSize()+MSI.getListAssembler().getSize()>15){
                        throw new Exception("La cantidad de trabajadores no puede ser 0");
                    }
                    MSIpm.start();
                    MSISuper.start(); 
                    this.Const_ProduPlaca_MSI.setValue(MSI.getListMotherboard().getSize());
                    this.Const_ProduCPU_MSI.setValue(MSI.getListCPU().getSize());
                    this.Const_ProduMemoRAM_MSI.setValue(MSI.getListRAM().getSize());
                    this.Const_ProduFuenteAlime_MSI.setValue(MSI.getListPowerSupply().getSize());
                    this.Const_ProduTarjegGraf_MSI.setValue(MSI.getListGraphic().getSize());
                    this.Const_Ensambladores_MSI.setValue(MSI.getListAssembler().getSize());
                      
                      System.out.println("Listo MSI");
                 
                 
                 }
                 
                
//                for (int i = 0; i < todo.length; i++) {
//                  System.out.println(todo[i]);  
//                }
                
            
            }
                
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erorr!!!! Asegurate de haber cargado el archivo correcto");
            System.exit(0);
            }
        }
    // revisar despues
    //Aquí se crea todo el tema de la gráfica    
     Global.addApple(0, 0);
     Global.addMSI(0, 0);
     Global.addSeries(Global.getApple());
     Global.addSeries(Global.getMSI());
        
    JFreeChart chart = ChartFactory.createXYLineChart("Utilidad vs Tiempo", "Utilidad (Millones $)", "Tiempo (Días)", Global.dataset, PlotOrientation.HORIZONTAL, false, true, false);
        
    final XYPlot plot = chart.getXYPlot( );
        
    ChartPanel barPanel = new ChartPanel(chart);
        
    XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer( );
    renderer.setSeriesPaint( 0 , Color.GREEN );
    renderer.setSeriesPaint( 1 , Color.RED);
    renderer.setSeriesStroke( 0 , new BasicStroke( 4.0f ) );
    renderer.setSeriesStroke( 1 , new BasicStroke( 4.0f ) );
    plot.setRenderer( renderer );

    panelChart.removeAll();
    panelChart.add(barPanel);
    panelChart.validate();
    
    } else {
        JOptionPane.showMessageDialog(null, "ERROR");
        System.exit(0);
    }
    } else{
        JOptionPane.showMessageDialog(null, "La simulacion ya ha iniciado");
    }


                                  
    }//GEN-LAST:event_jButton3ActionPerformed

    private void Const_ProduPlaca_AppleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Const_ProduPlaca_AppleStateChanged
        if(iniciado == true){
            if((int)this.Const_ProduPlaca_Apple.getValue() <= 0){
                this.Const_ProduPlaca_Apple.setValue(1);
                this.repaint();
            }        
            else if((int)this.Const_ProduPlaca_Apple.getValue() + (int)this.Const_ProduCPU_Apple.getValue() + (int)this.Const_ProduMemoRAM_Apple.getValue() + (int)this.Const_ProduFuenteAlime_Apple.getValue() + (int)this.Const_ProduTarjegGraf_Apple.getValue() + (int)this.Const_Ensambladores_Apple.getValue() > max_apple){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Const_ProduPlaca_Apple.setValue((int)this.Const_ProduPlaca_Apple.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = Apple.getListMotherboard().getSize();
                int cont2 = (int) Const_ProduPlaca_Apple.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        Apple.deleteWorker(0);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        Apple.AddWorker(0, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Const_ProduPlaca_Apple.setValue(1);
            this.repaint();
        }

    }//GEN-LAST:event_Const_ProduPlaca_AppleStateChanged

    private void Const_ProduCPU_AppleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Const_ProduCPU_AppleStateChanged
        if(iniciado == true){
            if((int)this.Const_ProduCPU_Apple.getValue() <= 0){
                this.Const_ProduCPU_Apple.setValue(1);
                this.repaint();
            }
            else if((int)this.Const_ProduPlaca_Apple.getValue() + (int)this.Const_ProduCPU_Apple.getValue() + (int)this.Const_ProduMemoRAM_Apple.getValue() + (int)this.Const_ProduFuenteAlime_Apple.getValue() + (int)this.Const_ProduTarjegGraf_Apple.getValue() + (int)this.Const_Ensambladores_Apple.getValue() > max_apple){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Const_ProduCPU_Apple.setValue((int)this.Const_ProduCPU_Apple.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = Apple.getListCPU().getSize();
                int cont2 = (int) Const_ProduCPU_Apple.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        Apple.deleteWorker(1);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        Apple.AddWorker(1, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Const_ProduCPU_Apple.setValue(1);
            this.repaint();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_Const_ProduCPU_AppleStateChanged

    private void Const_ProduMemoRAM_AppleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Const_ProduMemoRAM_AppleStateChanged
        if(iniciado == true){
            if((int)this.Const_ProduMemoRAM_Apple.getValue() <= 0){
                this.Const_ProduMemoRAM_Apple.setValue(1);
                this.repaint();
            }        
            else if((int)this.Const_ProduPlaca_Apple.getValue() + (int)this.Const_ProduCPU_Apple.getValue() + (int)this.Const_ProduMemoRAM_Apple.getValue() + (int)this.Const_ProduFuenteAlime_Apple.getValue() + (int)this.Const_ProduTarjegGraf_Apple.getValue() + (int)this.Const_Ensambladores_Apple.getValue() > max_apple){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Const_ProduMemoRAM_Apple.setValue((int)this.Const_ProduMemoRAM_Apple.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = Apple.getListRAM().getSize();
                int cont2 = (int) Const_ProduMemoRAM_Apple.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        Apple.deleteWorker(0);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        Apple.AddWorker(0, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Const_ProduMemoRAM_Apple.setValue(1);
            this.repaint();
        }
        
    }//GEN-LAST:event_Const_ProduMemoRAM_AppleStateChanged

    private void Const_ProduFuenteAlime_AppleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Const_ProduFuenteAlime_AppleStateChanged
        if(iniciado == true){
            if((int)this.Const_ProduFuenteAlime_Apple.getValue() <= 0){
                this.Const_ProduFuenteAlime_Apple.setValue(1);
                this.repaint();
            }        
            else if((int)this.Const_ProduPlaca_Apple.getValue() + (int)this.Const_ProduCPU_Apple.getValue() + (int)this.Const_ProduMemoRAM_Apple.getValue() + (int)this.Const_ProduFuenteAlime_Apple.getValue() + (int)this.Const_ProduTarjegGraf_Apple.getValue() + (int)this.Const_Ensambladores_Apple.getValue() > max_apple){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Const_ProduFuenteAlime_Apple.setValue((int)this.Const_ProduFuenteAlime_Apple.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = Apple.getListPowerSupply().getSize();
                int cont2 = (int) Const_ProduFuenteAlime_Apple.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        Apple.deleteWorker(0);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        Apple.AddWorker(0, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Const_ProduFuenteAlime_Apple.setValue(1);
            this.repaint();
        }

    }//GEN-LAST:event_Const_ProduFuenteAlime_AppleStateChanged

    private void Const_ProduTarjegGraf_AppleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Const_ProduTarjegGraf_AppleStateChanged
        if(iniciado == true){
            if((int)this.Const_ProduTarjegGraf_Apple.getValue() <= 0){
                this.Const_ProduTarjegGraf_Apple.setValue(1);
                this.repaint();
            }        
            else if((int)this.Const_ProduPlaca_Apple.getValue() + (int)this.Const_ProduCPU_Apple.getValue() + (int)this.Const_ProduMemoRAM_Apple.getValue() + (int)this.Const_ProduFuenteAlime_Apple.getValue() + (int)this.Const_ProduTarjegGraf_Apple.getValue() + (int)this.Const_Ensambladores_Apple.getValue() > max_apple){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Const_ProduTarjegGraf_Apple.setValue((int)this.Const_ProduTarjegGraf_Apple.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = Apple.getListGraphic().getSize();
                int cont2 = (int) Const_ProduTarjegGraf_Apple.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        Apple.deleteWorker(0);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        Apple.AddWorker(0, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Const_ProduTarjegGraf_Apple.setValue(1);
            this.repaint();
        }

    }//GEN-LAST:event_Const_ProduTarjegGraf_AppleStateChanged

    private void Const_Ensambladores_AppleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Const_Ensambladores_AppleStateChanged
        if(iniciado == true){
            if((int)this.Const_Ensambladores_Apple.getValue() <= 0){
                this.Const_Ensambladores_Apple.setValue(1);
                this.repaint();
            }        
            else if((int)this.Const_ProduPlaca_Apple.getValue() + (int)this.Const_ProduCPU_Apple.getValue() + (int)this.Const_ProduMemoRAM_Apple.getValue() + (int)this.Const_ProduFuenteAlime_Apple.getValue() + (int)this.Const_ProduTarjegGraf_Apple.getValue() + (int)this.Const_Ensambladores_Apple.getValue() > max_apple){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Const_Ensambladores_Apple.setValue((int)this.Const_Ensambladores_Apple.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = Apple.getListAssembler().getSize();
                int cont2 = (int) Const_Ensambladores_Apple.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        Apple.deleteWorker(0);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        Apple.AddWorker(0, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Const_Ensambladores_Apple.setValue(1);
            this.repaint();
        }

    }//GEN-LAST:event_Const_Ensambladores_AppleStateChanged

    private void Const_ProduPlaca_MSIStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Const_ProduPlaca_MSIStateChanged
        if(iniciado == true){
            if((int)this.Const_ProduPlaca_MSI.getValue() <= 0){
                this.Const_ProduPlaca_MSI.setValue(1);
                this.repaint();
            }        
            else if((int)this.Const_ProduPlaca_MSI.getValue() + (int)this.Const_ProduCPU_MSI.getValue() + (int)this.Const_ProduMemoRAM_MSI.getValue() + (int)this.Const_ProduFuenteAlime_MSI.getValue() + (int)this.Const_ProduTarjegGraf_MSI.getValue() + (int)this.Const_Ensambladores_MSI.getValue() > max_msi){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Const_ProduPlaca_MSI.setValue((int)this.Const_ProduPlaca_MSI.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = MSI.getListMotherboard().getSize();
                int cont2 = (int) Const_ProduPlaca_MSI.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        MSI.deleteWorker(0);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        MSI.AddWorker(0, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Const_ProduPlaca_MSI.setValue(1);
            this.repaint();
        }

    }//GEN-LAST:event_Const_ProduPlaca_MSIStateChanged

    private void Const_ProduCPU_MSIStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Const_ProduCPU_MSIStateChanged
        if(iniciado == true){
            if((int)this.Const_ProduCPU_MSI.getValue() <= 0){
                this.Const_ProduCPU_MSI.setValue(1);
                this.repaint();
            }        
            else if((int)this.Const_ProduPlaca_MSI.getValue() + (int)this.Const_ProduCPU_MSI.getValue() + (int)this.Const_ProduMemoRAM_MSI.getValue() + (int)this.Const_ProduFuenteAlime_MSI.getValue() + (int)this.Const_ProduTarjegGraf_MSI.getValue() + (int)this.Const_Ensambladores_MSI.getValue() > max_msi){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Const_ProduCPU_MSI.setValue((int)this.Const_ProduCPU_MSI.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = MSI.getListCPU().getSize();
                int cont2 = (int) Const_ProduCPU_MSI.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        MSI.deleteWorker(0);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        MSI.AddWorker(0, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Const_ProduCPU_MSI.setValue(1);
            this.repaint();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_Const_ProduCPU_MSIStateChanged

    private void Const_ProduMemoRAM_MSIStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Const_ProduMemoRAM_MSIStateChanged
        if(iniciado == true){
            if((int)this.Const_ProduMemoRAM_MSI.getValue() <= 0){
                this.Const_ProduMemoRAM_MSI.setValue(1);
                this.repaint();
            }        
            else if((int)this.Const_ProduPlaca_MSI.getValue() + (int)this.Const_ProduCPU_MSI.getValue() + (int)this.Const_ProduMemoRAM_MSI.getValue() + (int)this.Const_ProduFuenteAlime_MSI.getValue() + (int)this.Const_ProduTarjegGraf_MSI.getValue() + (int)this.Const_Ensambladores_MSI.getValue() > max_msi){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Const_ProduMemoRAM_MSI.setValue((int)this.Const_ProduMemoRAM_MSI.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = MSI.getListRAM().getSize();
                int cont2 = (int) Const_ProduMemoRAM_MSI.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        MSI.deleteWorker(0);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        MSI.AddWorker(0, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Const_ProduMemoRAM_MSI.setValue(1);
            this.repaint();
        }

    }//GEN-LAST:event_Const_ProduMemoRAM_MSIStateChanged

    private void Const_ProduFuenteAlime_MSIStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Const_ProduFuenteAlime_MSIStateChanged
        if(iniciado == true){
            if((int)this.Const_ProduFuenteAlime_MSI.getValue() <= 0){
                this.Const_ProduFuenteAlime_MSI.setValue(1);
                this.repaint();
            }        
            else if((int)this.Const_ProduPlaca_MSI.getValue() + (int)this.Const_ProduCPU_MSI.getValue() + (int)this.Const_ProduMemoRAM_MSI.getValue() + (int)this.Const_ProduFuenteAlime_MSI.getValue() + (int)this.Const_ProduTarjegGraf_MSI.getValue() + (int)this.Const_Ensambladores_MSI.getValue() > max_msi){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Const_ProduFuenteAlime_MSI.setValue((int)this.Const_ProduFuenteAlime_MSI.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = MSI.getListPowerSupply().getSize();
                int cont2 = (int) Const_ProduFuenteAlime_MSI.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        MSI.deleteWorker(0);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        MSI.AddWorker(0, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Const_ProduFuenteAlime_MSI.setValue(1);
            this.repaint();
        }

    }//GEN-LAST:event_Const_ProduFuenteAlime_MSIStateChanged

    private void Const_ProduTarjegGraf_MSIStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Const_ProduTarjegGraf_MSIStateChanged
        if(iniciado == true){
            if((int)this.Const_ProduTarjegGraf_MSI.getValue() <= 0){
                this.Const_ProduTarjegGraf_MSI.setValue(1);
                this.repaint();
            }        
            else if((int)this.Const_ProduPlaca_MSI.getValue() + (int)this.Const_ProduCPU_MSI.getValue() + (int)this.Const_ProduMemoRAM_MSI.getValue() + (int)this.Const_ProduFuenteAlime_MSI.getValue() + (int)this.Const_ProduTarjegGraf_MSI.getValue() + (int)this.Const_Ensambladores_MSI.getValue() > max_msi){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Const_ProduTarjegGraf_MSI.setValue((int)this.Const_ProduTarjegGraf_MSI.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = MSI.getListGraphic().getSize();
                int cont2 = (int) Const_ProduTarjegGraf_MSI.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        MSI.deleteWorker(0);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        MSI.AddWorker(0, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Const_ProduTarjegGraf_MSI.setValue(1);
            this.repaint();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_Const_ProduTarjegGraf_MSIStateChanged

    private void Const_Ensambladores_MSIStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Const_Ensambladores_MSIStateChanged
        if(iniciado == true){
            if((int)this.Const_Ensambladores_MSI.getValue() <= 0){
                this.Const_Ensambladores_MSI.setValue(1);
                this.repaint();
            }        
            else if((int)this.Const_ProduPlaca_MSI.getValue() + (int)this.Const_ProduCPU_MSI.getValue() + (int)this.Const_ProduMemoRAM_MSI.getValue() + (int)this.Const_ProduFuenteAlime_MSI.getValue() + (int)this.Const_ProduTarjegGraf_MSI.getValue() + (int)this.Const_Ensambladores_MSI.getValue() > max_msi){
                JOptionPane.showMessageDialog(null,"Número máximo de Empleados Alcanzado!");
                this.Const_Ensambladores_MSI.setValue((int)this.Const_Ensambladores_MSI.getValue() - 1);
                this.repaint();
            }
            else{
                int cont = MSI.getListAssembler().getSize();
                int cont2 = (int) Const_Ensambladores_MSI.getValue();

                if (cont > cont2){
                    while (cont > cont2){
                        MSI.deleteWorker(0);
                        cont --;
                    }
                }else if (cont < cont2){

                    while (cont < cont2){
                        MSI.AddWorker(0, 1);
                        cont ++;
                    }
                }
            }
        }else{
            this.Const_Ensambladores_MSI.setValue(1);
            this.repaint();
        }

    }//GEN-LAST:event_Const_Ensambladores_MSIStateChanged

    private void Cont_DeadlineStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Cont_DeadlineStateChanged
        if(iniciado == true){
            if((int)this.Cont_Deadline.getValue() <= 0){
                this.Cont_Deadline.setValue(1);
                this.repaint();
            }
        }else{
            this.Cont_Deadline.setValue(1);
            this.repaint();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_Cont_DeadlineStateChanged

    private void Cont_Day_DurationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Cont_Day_DurationStateChanged
        // TODO add your handling code here:
                if(iniciado == true){
            if((int)this.Cont_Day_Duration.getValue() <= 0){
                this.Cont_Day_Duration.setValue(1);
                this.repaint();
            }
        }else{
            this.Cont_Day_Duration.setValue(1);
            this.repaint();
        }
    }//GEN-LAST:event_Cont_Day_DurationStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    public Company getApple() {
        return Apple;
    }

    public void setApple(Company Apple) {
        this.Apple = Apple;
    }

    public Company getMSI() {
        return MSI;
    }

    public void setMSI(Company MSI) {
        this.MSI = MSI;
    }

    public boolean isIniciado() {
        return iniciado;
    }

    public void setIniciado(boolean iniciado) {
        this.iniciado = iniciado;
    }

    public int getMax_apple() {
        return max_apple;
    }

    public void setMax_apple(int max_apple) {
        this.max_apple = max_apple;
    }

    public int getMax_msi() {
        return max_msi;
    }

    public void setMax_msi(int max_msi) {
        this.max_msi = max_msi;
    }

    public static JLabel getApple_Director_State() {
        return Apple_Director_State;
    }

    public static void setApple_Director_State(JLabel Apple_Director_State) {
        Interface.Apple_Director_State = Apple_Director_State;
    }

    public static JLabel getApple_Discount_Counter() {
        return Apple_Discount_Counter;
    }

    public static void setApple_Discount_Counter(JLabel Apple_Discount_Counter) {
        Interface.Apple_Discount_Counter = Apple_Discount_Counter;
    }

    public static JLabel getApple_Fail_Counter() {
        return Apple_Fail_Counter;
    }

    public static void setApple_Fail_Counter(JLabel Apple_Fail_Counter) {
        Interface.Apple_Fail_Counter = Apple_Fail_Counter;
    }

    public static JLabel getApple_Gain_Counter() {
        return Apple_Gain_Counter;
    }

    public static void setApple_Gain_Counter(JLabel Apple_Gain_Counter) {
        Interface.Apple_Gain_Counter = Apple_Gain_Counter;
    }

    public static JLabel getApple_Loss_Counter() {
        return Apple_Loss_Counter;
    }

    public static void setApple_Loss_Counter(JLabel Apple_Loss_Counter) {
        Interface.Apple_Loss_Counter = Apple_Loss_Counter;
    }

    public static JLabel getApple_Pm_State() {
        return Apple_Pm_State;
    }

    public static void setApple_Pm_State(JLabel Apple_Pm_State) {
        Interface.Apple_Pm_State = Apple_Pm_State;
    }

    public static JLabel getApple_Utility_Counter() {
        return Apple_Utility_Counter;
    }

    public static void setApple_Utility_Counter(JLabel Apple_Utility_Counter) {
        Interface.Apple_Utility_Counter = Apple_Utility_Counter;
    }

    public JSpinner getConst_Ensambladores_Apple() {
        return Const_Ensambladores_Apple;
    }

    public void setConst_Ensambladores_Apple(JSpinner Const_Ensambladores_Apple) {
        this.Const_Ensambladores_Apple = Const_Ensambladores_Apple;
    }

    public JSpinner getConst_Ensambladores_MSI() {
        return Const_Ensambladores_MSI;
    }

    public void setConst_Ensambladores_MSI(JSpinner Const_Ensambladores_MSI) {
        this.Const_Ensambladores_MSI = Const_Ensambladores_MSI;
    }

    public JSpinner getConst_ProduCPU_Apple() {
        return Const_ProduCPU_Apple;
    }

    public void setConst_ProduCPU_Apple(JSpinner Const_ProduCPU_Apple) {
        this.Const_ProduCPU_Apple = Const_ProduCPU_Apple;
    }

    public JSpinner getConst_ProduCPU_MSI() {
        return Const_ProduCPU_MSI;
    }

    public void setConst_ProduCPU_MSI(JSpinner Const_ProduCPU_MSI) {
        this.Const_ProduCPU_MSI = Const_ProduCPU_MSI;
    }

    public JSpinner getConst_ProduFuenteAlime_Apple() {
        return Const_ProduFuenteAlime_Apple;
    }

    public void setConst_ProduFuenteAlime_Apple(JSpinner Const_ProduFuenteAlime_Apple) {
        this.Const_ProduFuenteAlime_Apple = Const_ProduFuenteAlime_Apple;
    }

    public JSpinner getConst_ProduFuenteAlime_MSI() {
        return Const_ProduFuenteAlime_MSI;
    }

    public void setConst_ProduFuenteAlime_MSI(JSpinner Const_ProduFuenteAlime_MSI) {
        this.Const_ProduFuenteAlime_MSI = Const_ProduFuenteAlime_MSI;
    }

    public JSpinner getConst_ProduMemoRAM_Apple() {
        return Const_ProduMemoRAM_Apple;
    }

    public void setConst_ProduMemoRAM_Apple(JSpinner Const_ProduMemoRAM_Apple) {
        this.Const_ProduMemoRAM_Apple = Const_ProduMemoRAM_Apple;
    }

    public JSpinner getConst_ProduMemoRAM_MSI() {
        return Const_ProduMemoRAM_MSI;
    }

    public void setConst_ProduMemoRAM_MSI(JSpinner Const_ProduMemoRAM_MSI) {
        this.Const_ProduMemoRAM_MSI = Const_ProduMemoRAM_MSI;
    }

    public JSpinner getConst_ProduPlaca_Apple() {
        return Const_ProduPlaca_Apple;
    }

    public void setConst_ProduPlaca_Apple(JSpinner Const_ProduPlaca_Apple) {
        this.Const_ProduPlaca_Apple = Const_ProduPlaca_Apple;
    }

    public JSpinner getConst_ProduPlaca_MSI() {
        return Const_ProduPlaca_MSI;
    }

    public void setConst_ProduPlaca_MSI(JSpinner Const_ProduPlaca_MSI) {
        this.Const_ProduPlaca_MSI = Const_ProduPlaca_MSI;
    }

    public JSpinner getConst_ProduTarjegGraf_Apple() {
        return Const_ProduTarjegGraf_Apple;
    }

    public void setConst_ProduTarjegGraf_Apple(JSpinner Const_ProduTarjegGraf_Apple) {
        this.Const_ProduTarjegGraf_Apple = Const_ProduTarjegGraf_Apple;
    }

    public JSpinner getConst_ProduTarjegGraf_MSI() {
        return Const_ProduTarjegGraf_MSI;
    }

    public void setConst_ProduTarjegGraf_MSI(JSpinner Const_ProduTarjegGraf_MSI) {
        this.Const_ProduTarjegGraf_MSI = Const_ProduTarjegGraf_MSI;
    }

    public JSpinner getCont_Day_Duration() {
        return Cont_Day_Duration;
    }

    public void setCont_Day_Duration(JSpinner Cont_Day_Duration) {
        this.Cont_Day_Duration = Cont_Day_Duration;
    }

    public JSpinner getCont_Deadline() {
        return Cont_Deadline;
    }

    public void setCont_Deadline(JSpinner Cont_Deadline) {
        this.Cont_Deadline = Cont_Deadline;
    }

    public static JLabel getMSI_Director_State() {
        return MSI_Director_State;
    }

    public static void setMSI_Director_State(JLabel MSI_Director_State) {
        Interface.MSI_Director_State = MSI_Director_State;
    }

    public static JLabel getMSI_Discount_Counter() {
        return MSI_Discount_Counter;
    }

    public static void setMSI_Discount_Counter(JLabel MSI_Discount_Counter) {
        Interface.MSI_Discount_Counter = MSI_Discount_Counter;
    }

    public static JLabel getMSI_Fail_Counter() {
        return MSI_Fail_Counter;
    }

    public static void setMSI_Fail_Counter(JLabel MSI_Fail_Counter) {
        Interface.MSI_Fail_Counter = MSI_Fail_Counter;
    }

    public static JLabel getMSI_Gain_Counter() {
        return MSI_Gain_Counter;
    }

    public static void setMSI_Gain_Counter(JLabel MSI_Gain_Counter) {
        Interface.MSI_Gain_Counter = MSI_Gain_Counter;
    }

    public static JLabel getMSI_Loss_Counter() {
        return MSI_Loss_Counter;
    }

    public static void setMSI_Loss_Counter(JLabel MSI_Loss_Counter) {
        Interface.MSI_Loss_Counter = MSI_Loss_Counter;
    }

    public static JLabel getMSI_Utility_Counter() {
        return MSI_Utility_Counter;
    }

    public static void setMSI_Utility_Counter(JLabel MSI_Utility_Counter) {
        Interface.MSI_Utility_Counter = MSI_Utility_Counter;
    }

    public static JLabel getMSI_pm_state() {
        return MSI_pm_state;
    }

    public static void setMSI_pm_state(JLabel MSI_pm_state) {
        Interface.MSI_pm_state = MSI_pm_state;
    }

    public static JLabel getWarehouse_Apple_PC_Regular() {
        return Warehouse_Apple_PC_Regular;
    }

    public static void setWarehouse_Apple_PC_Regular(JLabel Warehouse_Apple_PC_Regular) {
        Interface.Warehouse_Apple_PC_Regular = Warehouse_Apple_PC_Regular;
    }

    public static JLabel getWarehouse_Apple_PC_Special() {
        return Warehouse_Apple_PC_Special;
    }

    public static void setWarehouse_Apple_PC_Special(JLabel Warehouse_Apple_PC_Special) {
        Interface.Warehouse_Apple_PC_Special = Warehouse_Apple_PC_Special;
    }

    public static JLabel getWarehouse_FuenteAlimen_Apple() {
        return Warehouse_FuenteAlimen_Apple;
    }

    public static void setWarehouse_FuenteAlimen_Apple(JLabel Warehouse_FuenteAlimen_Apple) {
        Interface.Warehouse_FuenteAlimen_Apple = Warehouse_FuenteAlimen_Apple;
    }

    public static JLabel getWarehouse_FuenteAlimen_MSI() {
        return Warehouse_FuenteAlimen_MSI;
    }

    public static void setWarehouse_FuenteAlimen_MSI(JLabel Warehouse_FuenteAlimen_MSI) {
        Interface.Warehouse_FuenteAlimen_MSI = Warehouse_FuenteAlimen_MSI;
    }

    public static JLabel getWarehouse_MSI_PC_Regular() {
        return Warehouse_MSI_PC_Regular;
    }

    public static void setWarehouse_MSI_PC_Regular(JLabel Warehouse_MSI_PC_Regular) {
        Interface.Warehouse_MSI_PC_Regular = Warehouse_MSI_PC_Regular;
    }

    public static JLabel getWarehouse_MSI_PC_Special() {
        return Warehouse_MSI_PC_Special;
    }

    public static void setWarehouse_MSI_PC_Special(JLabel Warehouse_MSI_PC_Special) {
        Interface.Warehouse_MSI_PC_Special = Warehouse_MSI_PC_Special;
    }

    public static JLabel getWarehouse_ProduCPU_Apple() {
        return Warehouse_ProduCPU_Apple;
    }

    public static void setWarehouse_ProduCPU_Apple(JLabel Warehouse_ProduCPU_Apple) {
        Interface.Warehouse_ProduCPU_Apple = Warehouse_ProduCPU_Apple;
    }

    public static JLabel getWarehouse_ProduCPU_MSI() {
        return Warehouse_ProduCPU_MSI;
    }

    public static void setWarehouse_ProduCPU_MSI(JLabel Warehouse_ProduCPU_MSI) {
        Interface.Warehouse_ProduCPU_MSI = Warehouse_ProduCPU_MSI;
    }

    public static JLabel getWarehouse_ProduPlacabase_Apple() {
        return Warehouse_ProduPlacabase_Apple;
    }

    public static void setWarehouse_ProduPlacabase_Apple(JLabel Warehouse_ProduPlacabase_Apple) {
        Interface.Warehouse_ProduPlacabase_Apple = Warehouse_ProduPlacabase_Apple;
    }

    public static JLabel getWarehouse_ProduPlacabase_MSI() {
        return Warehouse_ProduPlacabase_MSI;
    }

    public static void setWarehouse_ProduPlacabase_MSI(JLabel Warehouse_ProduPlacabase_MSI) {
        Interface.Warehouse_ProduPlacabase_MSI = Warehouse_ProduPlacabase_MSI;
    }

    public static JLabel getWarehouse_ProdumemoRAM_Apple() {
        return Warehouse_ProdumemoRAM_Apple;
    }

    public static void setWarehouse_ProdumemoRAM_Apple(JLabel Warehouse_ProdumemoRAM_Apple) {
        Interface.Warehouse_ProdumemoRAM_Apple = Warehouse_ProdumemoRAM_Apple;
    }

    public static JLabel getWarehouse_ProdumemoRAM_MSI() {
        return Warehouse_ProdumemoRAM_MSI;
    }

    public static void setWarehouse_ProdumemoRAM_MSI(JLabel Warehouse_ProdumemoRAM_MSI) {
        Interface.Warehouse_ProdumemoRAM_MSI = Warehouse_ProdumemoRAM_MSI;
    }

    public static JLabel getWrehouse_TarjeGrafi_Apple() {
        return Wrehouse_TarjeGrafi_Apple;
    }

    public static void setWrehouse_TarjeGrafi_Apple(JLabel Wrehouse_TarjeGrafi_Apple) {
        Interface.Wrehouse_TarjeGrafi_Apple = Wrehouse_TarjeGrafi_Apple;
    }

    public static JLabel getWrehouse_TarjeGrafi_MSI() {
        return Wrehouse_TarjeGrafi_MSI;
    }

    public static void setWrehouse_TarjeGrafi_MSI(JLabel Wrehouse_TarjeGrafi_MSI) {
        Interface.Wrehouse_TarjeGrafi_MSI = Wrehouse_TarjeGrafi_MSI;
    }

    public JButton getjButton3() {
        return jButton3;
    }

    public void setjButton3(JButton jButton3) {
        this.jButton3 = jButton3;
    }

    public JLabel getjLabel1() {
        return jLabel1;
    }

    public void setjLabel1(JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    public JLabel getjLabel10() {
        return jLabel10;
    }

    public void setjLabel10(JLabel jLabel10) {
        this.jLabel10 = jLabel10;
    }

    public JLabel getjLabel11() {
        return jLabel11;
    }

    public void setjLabel11(JLabel jLabel11) {
        this.jLabel11 = jLabel11;
    }

    public JLabel getjLabel12() {
        return jLabel12;
    }

    public void setjLabel12(JLabel jLabel12) {
        this.jLabel12 = jLabel12;
    }

    public JLabel getjLabel13() {
        return jLabel13;
    }

    public void setjLabel13(JLabel jLabel13) {
        this.jLabel13 = jLabel13;
    }

    public JLabel getjLabel14() {
        return jLabel14;
    }

    public void setjLabel14(JLabel jLabel14) {
        this.jLabel14 = jLabel14;
    }

    public JLabel getjLabel15() {
        return jLabel15;
    }

    public void setjLabel15(JLabel jLabel15) {
        this.jLabel15 = jLabel15;
    }

    public JLabel getjLabel16() {
        return jLabel16;
    }

    public void setjLabel16(JLabel jLabel16) {
        this.jLabel16 = jLabel16;
    }

    public JLabel getjLabel17() {
        return jLabel17;
    }

    public void setjLabel17(JLabel jLabel17) {
        this.jLabel17 = jLabel17;
    }

    public JLabel getjLabel18() {
        return jLabel18;
    }

    public void setjLabel18(JLabel jLabel18) {
        this.jLabel18 = jLabel18;
    }

    public JLabel getjLabel19() {
        return jLabel19;
    }

    public void setjLabel19(JLabel jLabel19) {
        this.jLabel19 = jLabel19;
    }

    public JLabel getjLabel2() {
        return jLabel2;
    }

    public void setjLabel2(JLabel jLabel2) {
        this.jLabel2 = jLabel2;
    }

    public JLabel getjLabel20() {
        return jLabel20;
    }

    public void setjLabel20(JLabel jLabel20) {
        this.jLabel20 = jLabel20;
    }

    public JLabel getjLabel21() {
        return jLabel21;
    }

    public void setjLabel21(JLabel jLabel21) {
        this.jLabel21 = jLabel21;
    }

    public JLabel getjLabel22() {
        return jLabel22;
    }

    public void setjLabel22(JLabel jLabel22) {
        this.jLabel22 = jLabel22;
    }

    public JLabel getjLabel23() {
        return jLabel23;
    }

    public void setjLabel23(JLabel jLabel23) {
        this.jLabel23 = jLabel23;
    }

    public JLabel getjLabel24() {
        return jLabel24;
    }

    public void setjLabel24(JLabel jLabel24) {
        this.jLabel24 = jLabel24;
    }

    public JLabel getjLabel25() {
        return jLabel25;
    }

    public void setjLabel25(JLabel jLabel25) {
        this.jLabel25 = jLabel25;
    }

    public JLabel getjLabel26() {
        return jLabel26;
    }

    public void setjLabel26(JLabel jLabel26) {
        this.jLabel26 = jLabel26;
    }

    public JLabel getjLabel29() {
        return jLabel29;
    }

    public void setjLabel29(JLabel jLabel29) {
        this.jLabel29 = jLabel29;
    }

    public JLabel getjLabel3() {
        return jLabel3;
    }

    public void setjLabel3(JLabel jLabel3) {
        this.jLabel3 = jLabel3;
    }

    public JLabel getjLabel30() {
        return jLabel30;
    }

    public void setjLabel30(JLabel jLabel30) {
        this.jLabel30 = jLabel30;
    }

    public JLabel getjLabel31() {
        return jLabel31;
    }

    public void setjLabel31(JLabel jLabel31) {
        this.jLabel31 = jLabel31;
    }

    public JLabel getjLabel32() {
        return jLabel32;
    }

    public void setjLabel32(JLabel jLabel32) {
        this.jLabel32 = jLabel32;
    }

    public JLabel getjLabel33() {
        return jLabel33;
    }

    public void setjLabel33(JLabel jLabel33) {
        this.jLabel33 = jLabel33;
    }

    public JLabel getjLabel34() {
        return jLabel34;
    }

    public void setjLabel34(JLabel jLabel34) {
        this.jLabel34 = jLabel34;
    }

    public JLabel getjLabel35() {
        return jLabel35;
    }

    public void setjLabel35(JLabel jLabel35) {
        this.jLabel35 = jLabel35;
    }

    public JLabel getjLabel4() {
        return jLabel4;
    }

    public void setjLabel4(JLabel jLabel4) {
        this.jLabel4 = jLabel4;
    }

    public JLabel getjLabel5() {
        return jLabel5;
    }

    public void setjLabel5(JLabel jLabel5) {
        this.jLabel5 = jLabel5;
    }

    public JLabel getjLabel6() {
        return jLabel6;
    }

    public void setjLabel6(JLabel jLabel6) {
        this.jLabel6 = jLabel6;
    }

    public JLabel getjLabel7() {
        return jLabel7;
    }

    public void setjLabel7(JLabel jLabel7) {
        this.jLabel7 = jLabel7;
    }

    public JLabel getjLabel8() {
        return jLabel8;
    }

    public void setjLabel8(JLabel jLabel8) {
        this.jLabel8 = jLabel8;
    }

    public JLabel getjLabel9() {
        return jLabel9;
    }

    public void setjLabel9(JLabel jLabel9) {
        this.jLabel9 = jLabel9;
    }

    public JPanel getjPanel1() {
        return jPanel1;
    }

    public void setjPanel1(JPanel jPanel1) {
        this.jPanel1 = jPanel1;
    }

    public JPanel getjPanel2() {
        return jPanel2;
    }

    public void setjPanel2(JPanel jPanel2) {
        this.jPanel2 = jPanel2;
    }

    public static JPanel getjPanel3() {
        return jPanel3;
    }

    public static void setjPanel3(JPanel jPanel3) {
        Interface.jPanel3 = jPanel3;
    }

    public JPanel getjPanel4() {
        return jPanel4;
    }

    public void setjPanel4(JPanel jPanel4) {
        this.jPanel4 = jPanel4;
    }

    public JPanel getjPanel5() {
        return jPanel5;
    }

    public void setjPanel5(JPanel jPanel5) {
        this.jPanel5 = jPanel5;
    }

    public JPanel getjPanel6() {
        return jPanel6;
    }

    public void setjPanel6(JPanel jPanel6) {
        this.jPanel6 = jPanel6;
    }

    public JPanel getjPanel7() {
        return jPanel7;
    }

    public void setjPanel7(JPanel jPanel7) {
        this.jPanel7 = jPanel7;
    }

    public JTabbedPane getjTabbedPane1() {
        return jTabbedPane1;
    }

    public void setjTabbedPane1(JTabbedPane jTabbedPane1) {
        this.jTabbedPane1 = jTabbedPane1;
    }

    public JButton getSaveButtonActionPerformed() {
        return saveButtonActionPerformed;
    }

    public void setSaveButtonActionPerformed(JButton saveButtonActionPerformed) {
        this.saveButtonActionPerformed = saveButtonActionPerformed;
    }





    
    
    

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JLabel Apple_Deadline_Counter;
    private static javax.swing.JLabel Apple_Director_State;
    private static javax.swing.JLabel Apple_Discount_Counter;
    private static javax.swing.JLabel Apple_Fail_Counter;
    private static javax.swing.JLabel Apple_Gain_Counter;
    private static javax.swing.JLabel Apple_Loss_Counter;
    private static javax.swing.JLabel Apple_Pm_State;
    private static javax.swing.JLabel Apple_Utility_Counter;
    private javax.swing.JSpinner Const_Ensambladores_Apple;
    private javax.swing.JSpinner Const_Ensambladores_MSI;
    private javax.swing.JSpinner Const_ProduCPU_Apple;
    private javax.swing.JSpinner Const_ProduCPU_MSI;
    private javax.swing.JSpinner Const_ProduFuenteAlime_Apple;
    private javax.swing.JSpinner Const_ProduFuenteAlime_MSI;
    private javax.swing.JSpinner Const_ProduMemoRAM_Apple;
    private javax.swing.JSpinner Const_ProduMemoRAM_MSI;
    private javax.swing.JSpinner Const_ProduPlaca_Apple;
    private javax.swing.JSpinner Const_ProduPlaca_MSI;
    private javax.swing.JSpinner Const_ProduTarjegGraf_Apple;
    private javax.swing.JSpinner Const_ProduTarjegGraf_MSI;
    private javax.swing.JSpinner Cont_Day_Duration;
    private javax.swing.JSpinner Cont_Deadline;
    private static javax.swing.JLabel MSI_Deadline_Counter;
    private static javax.swing.JLabel MSI_Director_State;
    private static javax.swing.JLabel MSI_Discount_Counter;
    private static javax.swing.JLabel MSI_Fail_Counter;
    private static javax.swing.JLabel MSI_Gain_Counter;
    private static javax.swing.JLabel MSI_Loss_Counter;
    private static javax.swing.JLabel MSI_Utility_Counter;
    private static javax.swing.JLabel MSI_pm_state;
    private static javax.swing.JLabel Warehouse_Apple_PC_Regular;
    private static javax.swing.JLabel Warehouse_Apple_PC_Special;
    private static javax.swing.JLabel Warehouse_FuenteAlimen_Apple;
    private static javax.swing.JLabel Warehouse_FuenteAlimen_MSI;
    private static javax.swing.JLabel Warehouse_MSI_PC_Regular;
    private static javax.swing.JLabel Warehouse_MSI_PC_Special;
    private static javax.swing.JLabel Warehouse_ProduCPU_Apple;
    private static javax.swing.JLabel Warehouse_ProduCPU_MSI;
    private static javax.swing.JLabel Warehouse_ProduPlacabase_Apple;
    private static javax.swing.JLabel Warehouse_ProduPlacabase_MSI;
    private static javax.swing.JLabel Warehouse_ProdumemoRAM_Apple;
    private static javax.swing.JLabel Warehouse_ProdumemoRAM_MSI;
    private static javax.swing.JLabel Wrehouse_TarjeGrafi_Apple;
    private static javax.swing.JLabel Wrehouse_TarjeGrafi_MSI;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private static javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panelChart;
    private javax.swing.JButton saveButtonActionPerformed;
    // End of variables declaration//GEN-END:variables
}
